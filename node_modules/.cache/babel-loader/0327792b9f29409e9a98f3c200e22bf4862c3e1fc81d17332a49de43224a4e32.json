{"ast":null,"code":"import React,{useState,useEffect}from'react';import{LoadScript,GoogleMap,Marker,InfoWindow}from'@react-google-maps/api';import{getCurrentLocation}from'../../services/mapsService';import'./Map.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const mapContainerStyle={width:'100%',height:'100%'};const defaultMapOptions={disableDefaultUI:true,zoomControl:true};const defaultLocation={lat:40.7128,lng:-74.0060};// New York as fallback\nconst PLACE_TYPES={museums:'museum',parks:'park',restaurants:'restaurant',landmarks:'tourist_attraction'};const MARKER_ICONS={event:'http://maps.google.com/mapfiles/ms/icons/red-dot.png',place:{museum:'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',park:'http://maps.google.com/mapfiles/ms/icons/green-dot.png',restaurant:'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png',tourist_attraction:'http://maps.google.com/mapfiles/ms/icons/purple-dot.png'}};const MapContainer=_ref=>{let{events,places,onUserLocation,onPlacesLoaded}=_ref;// All hooks must be inside the component function\nconst[map,setMap]=useState(null);const[userLocation,setUserLocation]=useState(defaultLocation);const[selectedMarker,setSelectedMarker]=useState(null);const[mapError,setMapError]=useState(null);const[loading,setLoading]=useState(true);const[placesLoading,setPlacesLoading]=useState(false);// Initialize user location and map\nuseEffect(()=>{const initMap=async()=>{try{const location=await getCurrentLocation();setUserLocation(location);if(onUserLocation)onUserLocation(location);}catch(error){console.error(\"Geolocation error:\",error);setMapError(\"Couldn't get your location. Showing New York instead.\");setUserLocation(defaultLocation);if(onUserLocation)onUserLocation(defaultLocation);}finally{setLoading(false);}};initMap();},[onUserLocation]);// Load nearby places when map and location are ready\nuseEffect(()=>{if(!map||!window.google||!userLocation)return;const fetchAllPlaces=async()=>{setPlacesLoading(true);try{const service=new window.google.maps.places.PlacesService(map);const allPlaces=[];// Fetch places of each type\nfor(const[category,type]of Object.entries(PLACE_TYPES)){const places=await new Promise(resolve=>{service.nearbySearch({location:new window.google.maps.LatLng(userLocation.lat,userLocation.lng),radius:5000,// 2km radius\ntype:type},(results,status)=>{if(status===window.google.maps.places.PlacesServiceStatus.OK){resolve(results.map(place=>({...place,category})));}else{resolve([]);}});});allPlaces.push(...places);}onPlacesLoaded(allPlaces);}catch(error){console.error(\"Error fetching places:\",error);}finally{setPlacesLoading(false);}};fetchAllPlaces();},[map,userLocation,onPlacesLoaded]);if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"loading-overlay\",children:\"Loading map...\"});if(mapError)return/*#__PURE__*/_jsx(\"div\",{className:\"map-error\",children:mapError});return/*#__PURE__*/_jsx(LoadScript,{googleMapsApiKey:process.env.REACT_APP_GOOGLE_MAPS_API_KEY,libraries:['places'],children:/*#__PURE__*/_jsxs(GoogleMap,{mapContainerStyle:mapContainerStyle,center:userLocation,zoom:13,options:defaultMapOptions,onLoad:map=>setMap(map),children:[/*#__PURE__*/_jsx(Marker,{position:userLocation,icon:{url:'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'}}),events.map(event=>/*#__PURE__*/_jsx(Marker,{position:{lat:event.latitude,lng:event.longitude},onClick:()=>setSelectedMarker(event),icon:{url:MARKER_ICONS.event}},`event-${event.id}`)),places.map(place=>/*#__PURE__*/_jsx(Marker,{position:place.geometry.location,onClick:()=>setSelectedMarker(place),icon:{url:MARKER_ICONS.place[place.category]||MARKER_ICONS.place.tourist_attraction}},`place-${place.place_id}`)),selectedMarker&&/*#__PURE__*/_jsx(InfoWindow,{position:selectedMarker.geometry?selectedMarker.geometry.location:{lat:selectedMarker.latitude,lng:selectedMarker.longitude},onCloseClick:()=>setSelectedMarker(null),children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:selectedMarker.name}),/*#__PURE__*/_jsx(\"p\",{children:selectedMarker.vicinity||selectedMarker.location}),selectedMarker.rating&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Rating: \",selectedMarker.rating]}),selectedMarker.category&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Category: \",selectedMarker.category]})]})}),placesLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"places-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),\"Loading nearby places...\"]})]})});};export default MapContainer;","map":{"version":3,"names":["React","useState","useEffect","LoadScript","GoogleMap","Marker","InfoWindow","getCurrentLocation","jsx","_jsx","jsxs","_jsxs","mapContainerStyle","width","height","defaultMapOptions","disableDefaultUI","zoomControl","defaultLocation","lat","lng","PLACE_TYPES","museums","parks","restaurants","landmarks","MARKER_ICONS","event","place","museum","park","restaurant","tourist_attraction","MapContainer","_ref","events","places","onUserLocation","onPlacesLoaded","map","setMap","userLocation","setUserLocation","selectedMarker","setSelectedMarker","mapError","setMapError","loading","setLoading","placesLoading","setPlacesLoading","initMap","location","error","console","window","google","fetchAllPlaces","service","maps","PlacesService","allPlaces","category","type","Object","entries","Promise","resolve","nearbySearch","LatLng","radius","results","status","PlacesServiceStatus","OK","push","className","children","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","center","zoom","options","onLoad","position","icon","url","latitude","longitude","onClick","id","geometry","place_id","onCloseClick","name","vicinity","rating"],"sources":["C:/Users/USER/Desktop/events-explorer/src/components/Map/MapContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { LoadScript, GoogleMap, Marker, InfoWindow } from '@react-google-maps/api';\r\nimport { getCurrentLocation } from '../../services/mapsService';\r\nimport './Map.css';\r\n\r\nconst mapContainerStyle = {\r\n  width: '100%',\r\n  height: '100%'\r\n};\r\n\r\nconst defaultMapOptions = {\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n};\r\n\r\nconst defaultLocation = { lat: 40.7128, lng: -74.0060 }; // New York as fallback\r\n\r\nconst PLACE_TYPES = {\r\n  museums: 'museum',\r\n  parks: 'park',\r\n  restaurants: 'restaurant',\r\n  landmarks: 'tourist_attraction'\r\n};\r\n\r\nconst MARKER_ICONS = {\r\n  event: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png',\r\n  place: {\r\n    museum: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',\r\n    park: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png',\r\n    restaurant: 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png',\r\n    tourist_attraction: 'http://maps.google.com/mapfiles/ms/icons/purple-dot.png'\r\n  }\r\n};\r\n\r\nconst MapContainer = ({ events, places, onUserLocation, onPlacesLoaded }) => {\r\n  // All hooks must be inside the component function\r\n  const [map, setMap] = useState(null);\r\n  const [userLocation, setUserLocation] = useState(defaultLocation);\r\n  const [selectedMarker, setSelectedMarker] = useState(null);\r\n  const [mapError, setMapError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [placesLoading, setPlacesLoading] = useState(false);\r\n\r\n  // Initialize user location and map\r\n  useEffect(() => {\r\n    const initMap = async () => {\r\n      try {\r\n        const location = await getCurrentLocation();\r\n        setUserLocation(location);\r\n        if (onUserLocation) onUserLocation(location);\r\n      } catch (error) {\r\n        console.error(\"Geolocation error:\", error);\r\n        setMapError(\"Couldn't get your location. Showing New York instead.\");\r\n        setUserLocation(defaultLocation);\r\n        if (onUserLocation) onUserLocation(defaultLocation);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    initMap();\r\n  }, [onUserLocation]);\r\n\r\n  // Load nearby places when map and location are ready\r\n  useEffect(() => {\r\n    if (!map || !window.google || !userLocation) return;\r\n\r\n    const fetchAllPlaces = async () => {\r\n      setPlacesLoading(true);\r\n      try {\r\n        const service = new window.google.maps.places.PlacesService(map);\r\n        const allPlaces = [];\r\n        \r\n        // Fetch places of each type\r\n        for (const [category, type] of Object.entries(PLACE_TYPES)) {\r\n          const places = await new Promise((resolve) => {\r\n            service.nearbySearch({\r\n              location: new window.google.maps.LatLng(userLocation.lat, userLocation.lng),\r\n              radius: 5000, // 2km radius\r\n              type: type\r\n            }, (results, status) => {\r\n              if (status === window.google.maps.places.PlacesServiceStatus.OK) {\r\n                resolve(results.map(place => ({\r\n                  ...place,\r\n                  category\r\n                })));\r\n              } else {\r\n                resolve([]);\r\n              }\r\n            });\r\n          });\r\n          allPlaces.push(...places);\r\n        }\r\n\r\n        onPlacesLoaded(allPlaces);\r\n      } catch (error) {\r\n        console.error(\"Error fetching places:\", error);\r\n      } finally {\r\n        setPlacesLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllPlaces();\r\n  }, [map, userLocation, onPlacesLoaded]);\r\n\r\n  if (loading) return <div className=\"loading-overlay\">Loading map...</div>;\r\n  if (mapError) return <div className=\"map-error\">{mapError}</div>;\r\n\r\n  return (\r\n    <LoadScript\r\n      googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}\r\n      libraries={['places']}\r\n    >\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        center={userLocation}\r\n        zoom={13}\r\n        options={defaultMapOptions}\r\n        onLoad={map => setMap(map)}\r\n      >\r\n        {/* User Location Marker */}\r\n        <Marker\r\n          position={userLocation}\r\n          icon={{\r\n            url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\r\n          }}\r\n        />\r\n\r\n        {/* Event Markers */}\r\n        {events.map(event => (\r\n          <Marker\r\n            key={`event-${event.id}`}\r\n            position={{ lat: event.latitude, lng: event.longitude }}\r\n            onClick={() => setSelectedMarker(event)}\r\n            icon={{\r\n              url: MARKER_ICONS.event\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {/* Place Markers */}\r\n        {places.map(place => (\r\n          <Marker\r\n            key={`place-${place.place_id}`}\r\n            position={place.geometry.location}\r\n            onClick={() => setSelectedMarker(place)}\r\n            icon={{\r\n              url: MARKER_ICONS.place[place.category] || MARKER_ICONS.place.tourist_attraction\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {/* Info Window */}\r\n        {selectedMarker && (\r\n          <InfoWindow\r\n            position={\r\n              selectedMarker.geometry \r\n                ? selectedMarker.geometry.location \r\n                : { lat: selectedMarker.latitude, lng: selectedMarker.longitude }\r\n            }\r\n            onCloseClick={() => setSelectedMarker(null)}\r\n          >\r\n            <div>\r\n              <h3>{selectedMarker.name}</h3>\r\n              <p>{selectedMarker.vicinity || selectedMarker.location}</p>\r\n              {selectedMarker.rating && (\r\n                <p>Rating: {selectedMarker.rating}</p>\r\n              )}\r\n              {selectedMarker.category && (\r\n                <p>Category: {selectedMarker.category}</p>\r\n              )}\r\n            </div>\r\n          </InfoWindow>\r\n        )}\r\n\r\n        {/* Loading Indicator */}\r\n        {placesLoading && (\r\n          <div className=\"places-loading\">\r\n            <div className=\"loading-spinner\"></div>\r\n            Loading nearby places...\r\n          </div>\r\n        )}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default MapContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}