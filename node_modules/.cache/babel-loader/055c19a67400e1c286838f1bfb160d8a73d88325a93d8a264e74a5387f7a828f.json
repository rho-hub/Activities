{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\events-explorer\\\\src\\\\components\\\\Map\\\\MapContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LoadScript, GoogleMap } from '@react-google-maps/api';\nimport MapMarkers from './MapMarkers';\nimport { mapContainerStyle, defaultMapOptions } from './MapUtils';\nimport { getCurrentLocation } from '../../services/mapsService';\nimport './Map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapContainer = ({\n  events,\n  onPlacesLoaded\n}) => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [mapError, setMapError] = useState(null);\n  useEffect(() => {\n    const initializeMap = async () => {\n      try {\n        const location = await getCurrentLocation();\n        setUserLocation(location);\n        setLoading(false);\n      } catch (err) {\n        setMapError(err.message);\n        setUserLocation({\n          lat: 40.7128,\n          lng: -74.0060\n        }); // Default to NYC\n        setLoading(false);\n      }\n    };\n    initializeMap();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-loading\",\n    children: \"Loading map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  if (mapError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-error\",\n    children: mapError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      libraries: ['places'],\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapContainerStyle,\n        center: userLocation,\n        zoom: 13,\n        options: defaultMapOptions,\n        onLoad: map => {\n          setMap(map);\n          // Load places after map loads\n          if (userLocation) {\n            fetchNearbyPlaces(map, userLocation).then(places => onPlacesLoaded(places)).catch(console.error);\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(MapMarkers, {\n          userLocation: userLocation,\n          events: events\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(MapContainer, \"1JgA2DMBgbsbvIzXoV0f4N/oHhQ=\");\n_c = MapContainer;\nasync function fetchNearbyPlaces(map, location) {\n  return new Promise((resolve, reject) => {\n    if (!map || !window.google) return reject(\"Map not loaded\");\n    const service = new window.google.maps.places.PlacesService(map);\n    const request = {\n      location: new window.google.maps.LatLng(location.lat, location.lng),\n      radius: 5000,\n      type: ['park', 'tourist_attraction', 'amusement_park']\n    };\n    service.nearbySearch(request, (results, status) => {\n      if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n        resolve(results);\n      } else {\n        reject(status);\n      }\n    });\n  });\n}\nexport default MapContainer;\nvar _c;\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"names":["React","useState","useEffect","LoadScript","GoogleMap","MapMarkers","mapContainerStyle","defaultMapOptions","getCurrentLocation","jsxDEV","_jsxDEV","MapContainer","events","onPlacesLoaded","_s","map","setMap","userLocation","setUserLocation","loading","setLoading","mapError","setMapError","initializeMap","location","err","message","lat","lng","className","children","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","center","zoom","options","onLoad","fetchNearbyPlaces","then","places","catch","console","error","_c","Promise","resolve","reject","window","google","service","maps","PlacesService","request","LatLng","radius","type","nearbySearch","results","status","PlacesServiceStatus","OK","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/events-explorer/src/components/Map/MapContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { LoadScript, GoogleMap } from '@react-google-maps/api';\r\nimport MapMarkers from './MapMarkers';\r\nimport { mapContainerStyle, defaultMapOptions } from './MapUtils';\r\nimport { getCurrentLocation } from '../../services/mapsService';\r\nimport './Map.css';\r\n\r\nconst MapContainer = ({ events, onPlacesLoaded }) => {\r\n  const [map, setMap] = useState(null);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [mapError, setMapError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const initializeMap = async () => {\r\n      try {\r\n        const location = await getCurrentLocation();\r\n        setUserLocation(location);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setMapError(err.message);\r\n        setUserLocation({ lat: 40.7128, lng: -74.0060 }); // Default to NYC\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeMap();\r\n  }, []);\r\n\r\n  if (loading) return <div className=\"map-loading\">Loading map...</div>;\r\n  if (mapError) return <div className=\"map-error\">{mapError}</div>;\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <LoadScript\r\n        googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}\r\n        libraries={['places']}\r\n      >\r\n        <GoogleMap\r\n          mapContainerStyle={mapContainerStyle}\r\n          center={userLocation}\r\n          zoom={13}\r\n          options={defaultMapOptions}\r\n          onLoad={map => {\r\n            setMap(map);\r\n            // Load places after map loads\r\n            if (userLocation) {\r\n              fetchNearbyPlaces(map, userLocation)\r\n                .then(places => onPlacesLoaded(places))\r\n                .catch(console.error);\r\n            }\r\n          }}\r\n        >\r\n          <MapMarkers \r\n            userLocation={userLocation} \r\n            events={events} \r\n          />\r\n        </GoogleMap>\r\n      </LoadScript>\r\n    </div>\r\n  );\r\n};\r\n\r\nasync function fetchNearbyPlaces(map, location) {\r\n  return new Promise((resolve, reject) => {\r\n    if (!map || !window.google) return reject(\"Map not loaded\");\r\n    \r\n    const service = new window.google.maps.places.PlacesService(map);\r\n    const request = {\r\n      location: new window.google.maps.LatLng(location.lat, location.lng),\r\n      radius: 5000,\r\n      type: ['park', 'tourist_attraction', 'amusement_park']\r\n    };\r\n\r\n    service.nearbySearch(request, (results, status) => {\r\n      if (status === window.google.maps.places.PlacesServiceStatus.OK) {\r\n        resolve(results);\r\n      } else {\r\n        reject(status);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport default MapContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}